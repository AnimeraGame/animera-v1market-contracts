{
  "address": "0x01e116289819bFb500505C89F1AcdF27200a8670",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_acceptedToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ownerCutPerMillion",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ownerCutPerMillion",
          "type": "uint256"
        }
      ],
      "name": "ChangedOwnerCutPerMillion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "publicationFee",
          "type": "uint256"
        }
      ],
      "name": "ChangedPublicationFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "relayerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "functionSignature",
          "type": "bytes"
        }
      ],
      "name": "MetaTransactionExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiresAt",
          "type": "uint256"
        }
      ],
      "name": "OrderCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalPrice",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "OrderSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ERC721_Interface",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "InterfaceId_ValidateFingerprint",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptedToken",
      "outputs": [
        {
          "internalType": "contract ERC20Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiresAt",
          "type": "uint256"
        }
      ],
      "name": "createOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "functionSignature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "sigR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "sigS",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "sigV",
          "type": "uint8"
        }
      ],
      "name": "executeMetaTransaction",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "executeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderByAssetId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiresAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerCutPerMillion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicationFeeInWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "fingerprint",
          "type": "bytes"
        }
      ],
      "name": "safeExecuteOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ownerCutPerMillion",
          "type": "uint256"
        }
      ],
      "name": "setOwnerCutPerMillion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_publicationFee",
          "type": "uint256"
        }
      ],
      "name": "setPublicationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x33d94a0936d00c7238b6797d4db19f0446db8af9827266de6db2e6e370dd1666",
  "receipt": {
    "to": null,
    "from": "0x6C641CE6A7216F12d28692f9d8b2BDcdE812eD2b",
    "contractAddress": "0x01e116289819bFb500505C89F1AcdF27200a8670",
    "transactionIndex": 0,
    "gasUsed": "2120628",
    "logsBloom": "0x
    "blockHash": "0x69230f3ad5f63baed9677c23133edca664319a08519aae1cff073485a99abaa0",
    "transactionHash": "0x33d94a0936d00c7238b6797d4db19f0446db8af9827266de6db2e6e370dd1666",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 25513354,
        "transactionHash": "0x33d94a0936d00c7238b6797d4db19f0446db8af9827266de6db2e6e370dd1666",
        "address": "0x01e116289819bFb500505C89F1AcdF27200a8670",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006c641ce6a7216f12d28692f9d8b2bdcde812ed2b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x69230f3ad5f63baed9677c23133edca664319a08519aae1cff073485a99abaa0"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 25513354,
        "transactionHash": "0x33d94a0936d00c7238b6797d4db19f0446db8af9827266de6db2e6e370dd1666",
        "address": "0x01e116289819bFb500505C89F1AcdF27200a8670",
        "topics": [
          "0xfa406a120a9e7f2b332bfb7a43d3bf1c3f079262202907a6b69c94b2821a02c6"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 1,
        "blockHash": "0x69230f3ad5f63baed9677c23133edca664319a08519aae1cff073485a99abaa0"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 25513354,
        "transactionHash": "0x33d94a0936d00c7238b6797d4db19f0446db8af9827266de6db2e6e370dd1666",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000006c641ce6a7216f12d28692f9d8b2bdcde812ed2b",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000096adffa34c5390000000000000000000000000000000000000000000000000679b5f01fc17b8b30000000000000000000000000000000000000000000007a7511710e98d3e8b2c0000000000000000000000000000000000000000000000006704b10258cb65230000000000000000000000000000000000000000000007a751adbee9308adebc",
        "logIndex": 2,
        "blockHash": "0x69230f3ad5f63baed9677c23133edca664319a08519aae1cff073485a99abaa0"
      }
    ],
    "blockNumber": 25513354,
    "cumulativeGasUsed": "2120628",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x743e418116ed14FEDD3218297C18a1D4E5d551aF",
    0
  ],
  "solcInputHash": "3bcc6d7f0552a40a0c352d5f8aa04e3a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_acceptedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ownerCutPerMillion\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerCutPerMillion\",\"type\":\"uint256\"}],\"name\":\"ChangedOwnerCutPerMillion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"publicationFee\",\"type\":\"uint256\"}],\"name\":\"ChangedPublicationFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"}],\"name\":\"MetaTransactionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"OrderSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ERC721_Interface\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"InterfaceId_ValidateFingerprint\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptedToken\",\"outputs\":[{\"internalType\":\"contract ERC20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"}],\"name\":\"createOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"executeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderByAssetId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerCutPerMillion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicationFeeInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"fingerprint\",\"type\":\"bytes\"}],\"name\":\"safeExecuteOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ownerCutPerMillion\",\"type\":\"uint256\"}],\"name\":\"setOwnerCutPerMillion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_publicationFee\",\"type\":\"uint256\"}],\"name\":\"setPublicationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancelOrder(address,uint256)\":{\"details\":\"Cancel an already published order  can only be canceled by seller or the contract owner\",\"params\":{\"assetId\":\"- ID of the published NFT\",\"nftAddress\":\"- Address of the NFT registry\"}},\"constructor\":{\"details\":\"Initialize this contract. Acts as a constructor\",\"params\":{\"_acceptedToken\":\"- Address of the ERC20 accepted for this marketplace\",\"_ownerCutPerMillion\":\"- owner cut per million\"}},\"createOrder(address,uint256,uint256,uint256)\":{\"details\":\"Creates a new order\",\"params\":{\"assetId\":\"- ID of the published NFT\",\"expiresAt\":\"- Duration of the order (in hours)\",\"nftAddress\":\"- Non fungible registry address\",\"priceInWei\":\"- Price in Wei for the supported coin\"}},\"executeOrder(address,uint256,uint256)\":{\"details\":\"Executes the sale for a published NFT\",\"params\":{\"assetId\":\"- ID of the published NFT\",\"nftAddress\":\"- Address of the NFT registry\",\"price\":\"- Order price\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeExecuteOrder(address,uint256,uint256,bytes)\":{\"details\":\"Executes the sale for a published NFT and checks for the asset fingerprint\",\"params\":{\"assetId\":\"- ID of the published NFT\",\"fingerprint\":\"- Verification info for the asset\",\"nftAddress\":\"- Address of the NFT registry\",\"price\":\"- Order price\"}},\"setOwnerCutPerMillion(uint256)\":{\"details\":\"Sets the share cut for the owner of the contract that's  charged to the seller on a successful sale\",\"params\":{\"_ownerCutPerMillion\":\"- Share amount, from 0 to 999,999\"}},\"setPublicationFee(uint256)\":{\"details\":\"Sets the publication fee that's charged to users to publish items\",\"params\":{\"_publicationFee\":\"- Fee amount in wei this contract charges to publish an item\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\n\\r\\nimport \\\"./MarketplaceStorage.sol\\\";\\r\\nimport \\\"./commons/Ownable.sol\\\";\\r\\nimport \\\"./commons/Pausable.sol\\\";\\r\\nimport \\\"./commons/ContextMixin.sol\\\";\\r\\nimport \\\"./commons/NativeMetaTransaction.sol\\\";\\r\\n\\r\\n\\r\\ncontract Marketplace is Ownable, Pausable, MarketplaceStorage, NativeMetaTransaction {\\r\\n  using SafeMath for uint256;\\r\\n  using Address for address;\\r\\n\\r\\n  /**\\r\\n    * @dev Initialize this contract. Acts as a constructor\\r\\n    * @param _acceptedToken - Address of the ERC20 accepted for this marketplace\\r\\n    * @param _ownerCutPerMillion - owner cut per million\\r\\n    */\\r\\n  constructor (\\r\\n    address _acceptedToken,\\r\\n    uint256 _ownerCutPerMillion\\r\\n  )  {\\r\\n    // EIP712 init\\r\\n    _initializeEIP712('Marsverse Marketplace', '1');\\r\\n\\r\\n    // Fee init\\r\\n    setOwnerCutPerMillion(_ownerCutPerMillion);\\r\\n\\r\\n    require(_acceptedToken.isContract(), \\\"The accepted token address must be a deployed contract\\\");\\r\\n    acceptedToken = ERC20Interface(_acceptedToken);\\r\\n  }\\r\\n\\r\\n\\r\\n  /**\\r\\n    * @dev Sets the publication fee that's charged to users to publish items\\r\\n    * @param _publicationFee - Fee amount in wei this contract charges to publish an item\\r\\n    */\\r\\n  function setPublicationFee(uint256 _publicationFee) external onlyOwner {\\r\\n    publicationFeeInWei = _publicationFee;\\r\\n    emit ChangedPublicationFee(publicationFeeInWei);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    * @dev Sets the share cut for the owner of the contract that's\\r\\n    *  charged to the seller on a successful sale\\r\\n    * @param _ownerCutPerMillion - Share amount, from 0 to 999,999\\r\\n    */\\r\\n  function setOwnerCutPerMillion(uint256 _ownerCutPerMillion) public onlyOwner {\\r\\n    require(_ownerCutPerMillion < 1000000, \\\"The owner cut should be between 0 and 999,999\\\");\\r\\n\\r\\n    ownerCutPerMillion = _ownerCutPerMillion;\\r\\n    emit ChangedOwnerCutPerMillion(ownerCutPerMillion);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    * @dev Creates a new order\\r\\n    * @param nftAddress - Non fungible registry address\\r\\n    * @param assetId - ID of the published NFT\\r\\n    * @param priceInWei - Price in Wei for the supported coin\\r\\n    * @param expiresAt - Duration of the order (in hours)\\r\\n    */\\r\\n  function createOrder(\\r\\n    address nftAddress,\\r\\n    uint256 assetId,\\r\\n    uint256 priceInWei,\\r\\n    uint256 expiresAt\\r\\n  )\\r\\n    public\\r\\n    whenNotPaused\\r\\n  {\\r\\n    _createOrder(\\r\\n      nftAddress,\\r\\n      assetId,\\r\\n      priceInWei,\\r\\n      expiresAt\\r\\n    );\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    * @dev Cancel an already published order\\r\\n    *  can only be canceled by seller or the contract owner\\r\\n    * @param nftAddress - Address of the NFT registry\\r\\n    * @param assetId - ID of the published NFT\\r\\n    */\\r\\n  function cancelOrder(address nftAddress, uint256 assetId) public whenNotPaused {\\r\\n    _cancelOrder(nftAddress, assetId);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    * @dev Executes the sale for a published NFT and checks for the asset fingerprint\\r\\n    * @param nftAddress - Address of the NFT registry\\r\\n    * @param assetId - ID of the published NFT\\r\\n    * @param price - Order price\\r\\n    * @param fingerprint - Verification info for the asset\\r\\n    */\\r\\n  function safeExecuteOrder(\\r\\n    address nftAddress,\\r\\n    uint256 assetId,\\r\\n    uint256 price,\\r\\n    bytes memory fingerprint\\r\\n  )\\r\\n   public\\r\\n   whenNotPaused\\r\\n  {\\r\\n    _executeOrder(\\r\\n      nftAddress,\\r\\n      assetId,\\r\\n      price,\\r\\n      fingerprint\\r\\n    );\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    * @dev Executes the sale for a published NFT\\r\\n    * @param nftAddress - Address of the NFT registry\\r\\n    * @param assetId - ID of the published NFT\\r\\n    * @param price - Order price\\r\\n    */\\r\\n  function executeOrder(\\r\\n    address nftAddress,\\r\\n    uint256 assetId,\\r\\n    uint256 price\\r\\n  )\\r\\n   public\\r\\n   whenNotPaused\\r\\n  {\\r\\n    _executeOrder(\\r\\n      nftAddress,\\r\\n      assetId,\\r\\n      price,\\r\\n      \\\"\\\"\\r\\n    );\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    * @dev Creates a new order\\r\\n    * @param nftAddress - Non fungible registry address\\r\\n    * @param assetId - ID of the published NFT\\r\\n    * @param priceInWei - Price in Wei for the supported coin\\r\\n    * @param expiresAt - Duration of the order (in hours)\\r\\n    */\\r\\n  function _createOrder(\\r\\n    address nftAddress,\\r\\n    uint256 assetId,\\r\\n    uint256 priceInWei,\\r\\n    uint256 expiresAt\\r\\n  )\\r\\n    internal\\r\\n  {\\r\\n    _requireERC721(nftAddress);\\r\\n\\r\\n    address sender = _msgSender();\\r\\n\\r\\n    ERC721Interface nftRegistry = ERC721Interface(nftAddress);\\r\\n    address assetOwner = nftRegistry.ownerOf(assetId);\\r\\n\\r\\n    require(sender == assetOwner, \\\"Only the owner can create orders\\\");\\r\\n    require(\\r\\n      nftRegistry.getApproved(assetId) == address(this) || nftRegistry.isApprovedForAll(assetOwner, address(this)),\\r\\n      \\\"The contract is not authorized to manage the asset\\\"\\r\\n    );\\r\\n    require(priceInWei > 0, \\\"Price should be bigger than 0\\\");\\r\\n    require(expiresAt > block.timestamp.add(1 minutes), \\\"Publication should be more than 1 minute in the future\\\");\\r\\n\\r\\n    bytes32 orderId = keccak256(\\r\\n      abi.encodePacked(\\r\\n        block.timestamp,\\r\\n        assetOwner,\\r\\n        assetId,\\r\\n        nftAddress,\\r\\n        priceInWei\\r\\n      )\\r\\n    );\\r\\n\\r\\n    orderByAssetId[nftAddress][assetId] = Order({\\r\\n      id: orderId,\\r\\n      seller: assetOwner,\\r\\n      nftAddress: nftAddress,\\r\\n      price: priceInWei,\\r\\n      expiresAt: expiresAt\\r\\n    });\\r\\n\\r\\n    // Check if there's a publication fee and\\r\\n    // transfer the amount to marketplace owner\\r\\n    if (publicationFeeInWei > 0) {\\r\\n      require(\\r\\n        acceptedToken.transferFrom(sender, owner(), publicationFeeInWei),\\r\\n        \\\"Transfering the publication fee to the Marketplace owner failed\\\"\\r\\n      );\\r\\n    }\\r\\n\\r\\n    emit OrderCreated(\\r\\n      orderId,\\r\\n      assetId,\\r\\n      assetOwner,\\r\\n      nftAddress,\\r\\n      priceInWei,\\r\\n      expiresAt\\r\\n    );\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    * @dev Cancel an already published order\\r\\n    *  can only be canceled by seller or the contract owner\\r\\n    * @param nftAddress - Address of the NFT registry\\r\\n    * @param assetId - ID of the published NFT\\r\\n    */\\r\\n  function _cancelOrder(address nftAddress, uint256 assetId) internal returns (Order memory) {\\r\\n    address sender = _msgSender();\\r\\n    Order memory order = orderByAssetId[nftAddress][assetId];\\r\\n\\r\\n    require(order.id != 0, \\\"Asset not published\\\");\\r\\n    require(order.seller == sender || sender == owner(), \\\"Unauthorized user\\\");\\r\\n\\r\\n    bytes32 orderId = order.id;\\r\\n    address orderSeller = order.seller;\\r\\n    address orderNftAddress = order.nftAddress;\\r\\n    delete orderByAssetId[nftAddress][assetId];\\r\\n\\r\\n    emit OrderCancelled(\\r\\n      orderId,\\r\\n      assetId,\\r\\n      orderSeller,\\r\\n      orderNftAddress\\r\\n    );\\r\\n\\r\\n    return order;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    * @dev Executes the sale for a published NFT\\r\\n    * @param nftAddress - Address of the NFT registry\\r\\n    * @param assetId - ID of the published NFT\\r\\n    * @param price - Order price\\r\\n    * @param fingerprint - Verification info for the asset\\r\\n    */\\r\\n  function _executeOrder(\\r\\n    address nftAddress,\\r\\n    uint256 assetId,\\r\\n    uint256 price,\\r\\n    bytes memory fingerprint\\r\\n  )\\r\\n   internal returns (Order memory)\\r\\n  {\\r\\n    _requireERC721(nftAddress);\\r\\n\\r\\n    address sender = _msgSender();\\r\\n\\r\\n    ERC721Verifiable nftRegistry = ERC721Verifiable(nftAddress);\\r\\n\\r\\n    if (nftRegistry.supportsInterface(InterfaceId_ValidateFingerprint)) {\\r\\n      require(\\r\\n        nftRegistry.verifyFingerprint(assetId, fingerprint),\\r\\n        \\\"The asset fingerprint is not valid\\\"\\r\\n      );\\r\\n    }\\r\\n    Order memory order = orderByAssetId[nftAddress][assetId];\\r\\n\\r\\n    require(order.id != 0, \\\"Asset not published\\\");\\r\\n\\r\\n    address seller = order.seller;\\r\\n\\r\\n    require(seller != address(0), \\\"Invalid address\\\");\\r\\n    require(seller != sender, \\\"Unauthorized user\\\");\\r\\n    require(order.price == price, \\\"The price is not correct\\\");\\r\\n    require(block.timestamp < order.expiresAt, \\\"The order expired\\\");\\r\\n    require(seller == nftRegistry.ownerOf(assetId), \\\"The seller is no longer the owner\\\");\\r\\n\\r\\n    uint saleShareAmount = 0;\\r\\n\\r\\n    bytes32 orderId = order.id;\\r\\n    delete orderByAssetId[nftAddress][assetId];\\r\\n\\r\\n    if (ownerCutPerMillion > 0) {\\r\\n      // Calculate sale share\\r\\n      saleShareAmount = price.mul(ownerCutPerMillion).div(1000000);\\r\\n\\r\\n      // Transfer share amount for marketplace Owner\\r\\n      require(\\r\\n        acceptedToken.transferFrom(sender, owner(), saleShareAmount),\\r\\n        \\\"Transfering the cut to the Marketplace owner failed\\\"\\r\\n      );\\r\\n    }\\r\\n\\r\\n    // Transfer sale amount to seller\\r\\n    require(\\r\\n      acceptedToken.transferFrom(sender, seller, price.sub(saleShareAmount)),\\r\\n      \\\"Transfering the sale amount to the seller failed\\\"\\r\\n    );\\r\\n\\r\\n    // Transfer asset owner\\r\\n    nftRegistry.safeTransferFrom(\\r\\n      seller,\\r\\n      sender,\\r\\n      assetId\\r\\n    );\\r\\n\\r\\n    emit OrderSuccessful(\\r\\n      orderId,\\r\\n      assetId,\\r\\n      seller,\\r\\n      nftAddress,\\r\\n      price,\\r\\n      sender\\r\\n    );\\r\\n\\r\\n    return order;\\r\\n  }\\r\\n\\r\\n  function _requireERC721(address nftAddress) internal view {\\r\\n    require(nftAddress.isContract(), \\\"The NFT Address should be a contract\\\");\\r\\n\\r\\n    ERC721Interface nftRegistry = ERC721Interface(nftAddress);\\r\\n    require(\\r\\n      nftRegistry.supportsInterface(ERC721_Interface),\\r\\n      \\\"The NFT contract has an invalid ERC721 implementation\\\"\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xbed0974600340bdb79150f07a284cb64307e6d6aa70929f061c55130fdfe7434\",\"license\":\"MIT\"},\"contracts/MarketplaceStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.0;\\r\\n\\r\\n/**\\r\\n * @title Interface for contracts conforming to ERC-20\\r\\n */\\r\\ninterface ERC20Interface {\\r\\n  function transferFrom(address from, address to, uint tokens) external returns (bool success);\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Interface for contracts conforming to ERC-721\\r\\n */\\r\\ninterface ERC721Interface {\\r\\n  function ownerOf(uint256 _tokenId) external view returns (address _owner);\\r\\n  function approve(address _to, uint256 _tokenId) external;\\r\\n  function getApproved(uint256 _tokenId) external view returns (address);\\r\\n  function isApprovedForAll(address _owner, address _operator) external view returns (bool);\\r\\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;\\r\\n  function supportsInterface(bytes4) external view returns (bool);\\r\\n}\\r\\n\\r\\n\\r\\ninterface ERC721Verifiable is ERC721Interface {\\r\\n  function verifyFingerprint(uint256, bytes memory) external view returns (bool);\\r\\n}\\r\\n\\r\\n\\r\\ncontract MarketplaceStorage {\\r\\n  ERC20Interface public acceptedToken;\\r\\n\\r\\n  struct Order {\\r\\n    // Order ID\\r\\n    bytes32 id;\\r\\n    // Owner of the NFT\\r\\n    address seller;\\r\\n    // NFT registry address\\r\\n    address nftAddress;\\r\\n    // Price (in wei) for the published item\\r\\n    uint256 price;\\r\\n    // Time when this sale ends\\r\\n    uint256 expiresAt;\\r\\n  }\\r\\n\\r\\n  // From ERC721 registry assetId to Order (to avoid asset collision)\\r\\n  mapping (address => mapping(uint256 => Order)) public orderByAssetId;\\r\\n\\r\\n  uint256 public ownerCutPerMillion;\\r\\n  uint256 public publicationFeeInWei;\\r\\n\\r\\n  bytes4 public constant InterfaceId_ValidateFingerprint = bytes4(\\r\\n    keccak256(\\\"verifyFingerprint(uint256,bytes)\\\")\\r\\n  );\\r\\n\\r\\n  bytes4 public constant ERC721_Interface = bytes4(0x80ac58cd);\\r\\n\\r\\n  // EVENTS\\r\\n  event OrderCreated(\\r\\n    bytes32 id,\\r\\n    uint256 indexed assetId,\\r\\n    address indexed seller,\\r\\n    address nftAddress,\\r\\n    uint256 priceInWei,\\r\\n    uint256 expiresAt\\r\\n  );\\r\\n  event OrderSuccessful(\\r\\n    bytes32 id,\\r\\n    uint256 indexed assetId,\\r\\n    address indexed seller,\\r\\n    address nftAddress,\\r\\n    uint256 totalPrice,\\r\\n    address indexed buyer\\r\\n  );\\r\\n  event OrderCancelled(\\r\\n    bytes32 id,\\r\\n    uint256 indexed assetId,\\r\\n    address indexed seller,\\r\\n    address nftAddress\\r\\n  );\\r\\n\\r\\n  event ChangedPublicationFee(uint256 publicationFee);\\r\\n  event ChangedOwnerCutPerMillion(uint256 ownerCutPerMillion);\\r\\n}\\r\\n\",\"keccak256\":\"0xa43ca01306ff7dfb9f0736360d31e5b4d99fd7f3b0a195edca0a2cca425f84b6\",\"license\":\"MIT\"},\"contracts/commons/ContextMixin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.0;\\r\\n\\r\\n\\r\\ncontract ContextMixin {\\r\\n    function _msgSender()\\r\\n        internal\\r\\n        view\\r\\n        returns (address sender)\\r\\n    {\\r\\n        if (msg.sender == address(this)) {\\r\\n            bytes memory array = msg.data;\\r\\n            uint256 index = msg.data.length;\\r\\n            assembly {\\r\\n                // Load the 32 bytes word from memory with the address on the lower 20 bytes, and mask those.\\r\\n                sender := and(\\r\\n                    mload(add(array, index)),\\r\\n                    0xffffffffffffffffffffffffffffffffffffffff\\r\\n                )\\r\\n            }\\r\\n        } else {\\r\\n            sender = msg.sender;\\r\\n        }\\r\\n        return sender;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xc9e1b7552f6919cca17529a88a2851eee5f1a7546517bdc2398b3be18275a953\",\"license\":\"MIT\"},\"contracts/commons/EIP712Base.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.0;\\r\\n\\r\\n\\r\\ncontract EIP712Base {\\r\\n    struct EIP712Domain {\\r\\n        string name;\\r\\n        string version;\\r\\n        address verifyingContract;\\r\\n        bytes32 salt;\\r\\n    }\\r\\n\\r\\n    bytes32 internal constant EIP712_DOMAIN_TYPEHASH = keccak256(\\r\\n        bytes(\\r\\n            \\\"EIP712Domain(string name,string version,address verifyingContract,bytes32 salt)\\\"\\r\\n        )\\r\\n    );\\r\\n    bytes32 public domainSeparator;\\r\\n\\r\\n    // supposed to be called once while initializing.\\r\\n    // one of the contractsa that inherits this contract follows proxy pattern\\r\\n    // so it is not possible to do this in a constructor\\r\\n    function _initializeEIP712(\\r\\n        string memory name,\\r\\n        string memory version\\r\\n    )\\r\\n        internal\\r\\n    {\\r\\n        domainSeparator = keccak256(\\r\\n            abi.encode(\\r\\n                EIP712_DOMAIN_TYPEHASH,\\r\\n                keccak256(bytes(name)),\\r\\n                keccak256(bytes(version)),\\r\\n                address(this),\\r\\n                bytes32(getChainId())\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getChainId() public view returns (uint256) {\\r\\n        uint256 id;\\r\\n        assembly {\\r\\n            id := chainid()\\r\\n        }\\r\\n        return id;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Accept message hash and returns hash message in EIP712 compatible form\\r\\n     * So that it can be used to recover signer from signature signed using EIP712 formatted data\\r\\n     * https://eips.ethereum.org/EIPS/eip-712\\r\\n     * \\\"\\\\\\\\x19\\\" makes the encoding deterministic\\r\\n     * \\\"\\\\\\\\x01\\\" is the version byte to make it compatible to EIP-191\\r\\n     */\\r\\n    function toTypedMessageHash(bytes32 messageHash)\\r\\n        internal\\r\\n        view\\r\\n        returns (bytes32)\\r\\n    {\\r\\n        return\\r\\n            keccak256(\\r\\n                abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, messageHash)\\r\\n            );\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa0e4d2b809a7f02b2d547e04acaf2aeece20f300724df94407e7eb59a879bd4e\",\"license\":\"MIT\"},\"contracts/commons/NativeMetaTransaction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.0;\\r\\n\\r\\n\\r\\nimport { EIP712Base } from \\\"./EIP712Base.sol\\\";\\r\\n\\r\\ncontract NativeMetaTransaction is EIP712Base {\\r\\n    bytes32 private constant META_TRANSACTION_TYPEHASH = keccak256(\\r\\n        bytes(\\r\\n            \\\"MetaTransaction(uint256 nonce,address from,bytes functionSignature)\\\"\\r\\n        )\\r\\n    );\\r\\n    event MetaTransactionExecuted(\\r\\n        address userAddress,\\r\\n        address relayerAddress,\\r\\n        bytes functionSignature\\r\\n    );\\r\\n    mapping(address => uint256) nonces;\\r\\n\\r\\n    /*\\r\\n     * Meta transaction structure.\\r\\n     * No point of including value field here as if user is doing value transfer then he has the funds to pay for gas\\r\\n     * He should call the desired function directly in that case.\\r\\n     */\\r\\n    struct MetaTransaction {\\r\\n        uint256 nonce;\\r\\n        address from;\\r\\n        bytes functionSignature;\\r\\n    }\\r\\n\\r\\n    function executeMetaTransaction(\\r\\n        address userAddress,\\r\\n        bytes memory functionSignature,\\r\\n        bytes32 sigR,\\r\\n        bytes32 sigS,\\r\\n        uint8 sigV\\r\\n    ) public payable returns (bytes memory) {\\r\\n        MetaTransaction memory metaTx = MetaTransaction({\\r\\n            nonce: nonces[userAddress],\\r\\n            from: userAddress,\\r\\n            functionSignature: functionSignature\\r\\n        });\\r\\n\\r\\n        require(\\r\\n            verify(userAddress, metaTx, sigR, sigS, sigV),\\r\\n            \\\"NMT#executeMetaTransaction: SIGNER_AND_SIGNATURE_DO_NOT_MATCH\\\"\\r\\n        );\\r\\n\\r\\n        // increase nonce for user (to avoid re-use)\\r\\n        nonces[userAddress] = nonces[userAddress] + 1;\\r\\n\\r\\n        emit MetaTransactionExecuted(\\r\\n            userAddress,\\r\\n            msg.sender,\\r\\n            functionSignature\\r\\n        );\\r\\n\\r\\n        // Append userAddress and relayer address at the end to extract it from calling context\\r\\n        (bool success, bytes memory returnData) = address(this).call(\\r\\n            abi.encodePacked(functionSignature, userAddress)\\r\\n        );\\r\\n        require(success, \\\"NMT#executeMetaTransaction: CALL_FAILED\\\");\\r\\n\\r\\n        return returnData;\\r\\n    }\\r\\n\\r\\n    function hashMetaTransaction(MetaTransaction memory metaTx)\\r\\n        internal\\r\\n        pure\\r\\n        returns (bytes32)\\r\\n    {\\r\\n        return\\r\\n            keccak256(\\r\\n                abi.encode(\\r\\n                    META_TRANSACTION_TYPEHASH,\\r\\n                    metaTx.nonce,\\r\\n                    metaTx.from,\\r\\n                    keccak256(metaTx.functionSignature)\\r\\n                )\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function getNonce(address user) public view returns (uint256 nonce) {\\r\\n        nonce = nonces[user];\\r\\n    }\\r\\n\\r\\n    function verify(\\r\\n        address signer,\\r\\n        MetaTransaction memory metaTx,\\r\\n        bytes32 sigR,\\r\\n        bytes32 sigS,\\r\\n        uint8 sigV\\r\\n    ) internal view returns (bool) {\\r\\n        require(signer != address(0), \\\"NMT#verify: INVALID_SIGNER\\\");\\r\\n        return\\r\\n            signer ==\\r\\n            ecrecover(\\r\\n                toTypedMessageHash(hashMetaTransaction(metaTx)),\\r\\n                sigV,\\r\\n                sigR,\\r\\n                sigS\\r\\n            );\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb8fe8d582a40a33d357b7460ddac9b69bd45e4a488408915ee35120f3f6fd77a\",\"license\":\"MIT\"},\"contracts/commons/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.0;\\r\\n\\r\\nimport \\\"./ContextMixin.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\nabstract contract Ownable is ContextMixin {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x26ee860762e17f84f9bd051902b0d45229f1e9ab5cf44e30d3acab93f4524ed5\",\"license\":\"MIT\"},\"contracts/commons/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.0;\\r\\n\\r\\nimport \\\"./ContextMixin.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which allows children to implement an emergency stop\\r\\n * mechanism that can be triggered by an authorized account.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the\\r\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\r\\n * the functions of your contract. Note that they will not be pausable by\\r\\n * simply including this module, only once the modifiers are put in place.\\r\\n */\\r\\nabstract contract Pausable is ContextMixin {\\r\\n    /**\\r\\n     * @dev Emitted when the pause is triggered by `account`.\\r\\n     */\\r\\n    event Paused(address account);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pause is lifted by `account`.\\r\\n     */\\r\\n    event Unpaused(address account);\\r\\n\\r\\n    bool private _paused;\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract in unpaused state.\\r\\n     */\\r\\n    constructor () {\\r\\n        _paused = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns true if the contract is paused, and false otherwise.\\r\\n     */\\r\\n    function paused() public view virtual returns (bool) {\\r\\n        return _paused;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The contract must not be paused.\\r\\n     */\\r\\n    modifier whenNotPaused() {\\r\\n        require(!paused(), \\\"Pausable: paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Modifier to make a function callable only when the contract is paused.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The contract must be paused.\\r\\n     */\\r\\n    modifier whenPaused() {\\r\\n        require(paused(), \\\"Pausable: not paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Triggers stopped state.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The contract must not be paused.\\r\\n     */\\r\\n    function _pause() internal virtual whenNotPaused {\\r\\n        _paused = true;\\r\\n        emit Paused(_msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns to normal state.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The contract must be paused.\\r\\n     */\\r\\n    function _unpause() internal virtual whenPaused {\\r\\n        _paused = false;\\r\\n        emit Unpaused(_msgSender());\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe21bfb1aa4c4d344de53fed3d77c8697217d4d50b0ade595c3fdf902b5665bfa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200286138038062002861833981016040819052620000349162000303565b60006200004062000167565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000805460ff60a01b19169055604080518082018252601581527f4d6172737665727365204d61726b6574706c6163650000000000000000000000602080830191909152825180840190935260018352603160f81b90830152620000ee91620001c6565b620000f9816200023d565b62000118826001600160a01b0316620002ea60201b620009221760201c565b620001405760405162461bcd60e51b8152600401620001379062000369565b60405180910390fd5b50600180546001600160a01b0319166001600160a01b039290921691909117905562000451565b600033301415620001c057600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620001c39050565b50335b90565b6040518060800160405280604f815260200162002812604f913980519060200120828051906020012082805190602001203062000208620002f060201b60201c565b6040516200021e9594939291906020016200033d565b60408051601f1981840301815291905280516020909101206005555050565b6200024762000167565b6001600160a01b03166200025a620002f4565b6001600160a01b031614620002835760405162461bcd60e51b8152600401620001379062000413565b620f42408110620002a85760405162461bcd60e51b81526004016200013790620003c6565b60038190556040517ffa406a120a9e7f2b332bfb7a43d3bf1c3f079262202907a6b69c94b2821a02c690620002df90839062000448565b60405180910390a150565b3b151590565b4690565b6000546001600160a01b031690565b6000806040838503121562000316578182fd5b82516001600160a01b03811681146200032d578283fd5b6020939093015192949293505050565b948552602085019390935260408401919091526001600160a01b03166060830152608082015260a00190565b60208082526036908201527f54686520616363657074656420746f6b656e2061646472657373206d7573742060408201527f62652061206465706c6f79656420636f6e747261637400000000000000000000606082015260800190565b6020808252602d908201527f546865206f776e6572206375742073686f756c64206265206265747765656e2060408201526c3020616e64203939392c39393960981b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b6123b180620004616000396000f3fe60806040526004361061011f5760003560e01c8063715018a6116100a0578063ae7b033311610064578063ae7b0333146102e0578063af8996f114610300578063e61f385114610320578063f2fde38b14610351578063f698da25146103715761011f565b8063715018a61461026c5780638da5cb5b146102815780639b214f7714610296578063a01f79d4146102b6578063ae4f1198146102cb5761011f565b806337f82f37116100e757806337f82f37146101d3578063451c3d80146101e85780635c975abb1461020a5780636a2061371461022c5780636f652e1a1461024c5761011f565b80630c53c51c1461012457806319dad16d1461014d5780632b4c32be1461016f5780632d0335ab146101915780633408e470146101be575b600080fd5b61013761013236600461184c565b610386565b6040516101449190611c46565b60405180910390f35b34801561015957600080fd5b5061016d6101683660046119e1565b61050f565b005b34801561017b57600080fd5b506101846105b0565b6040516101449190611c31565b34801561019d57600080fd5b506101b16101ac366004611814565b6105bb565b6040516101449190611b5d565b3480156101ca57600080fd5b506101b16105d6565b3480156101df57600080fd5b506101846105db565b3480156101f457600080fd5b506101fd6105ff565b6040516101449190611acb565b34801561021657600080fd5b5061021f61060e565b6040516101449190611b52565b34801561023857600080fd5b5061016d6102473660046118c7565b61061e565b34801561025857600080fd5b5061016d610267366004611987565b610652565b34801561027857600080fd5b5061016d610689565b34801561028d57600080fd5b506101fd610712565b3480156102a257600080fd5b5061016d6102b1366004611926565b610721565b3480156102c257600080fd5b506101b1610759565b3480156102d757600080fd5b506101b161075f565b3480156102ec57600080fd5b5061016d6102fb3660046118f2565b610765565b34801561030c57600080fd5b5061016d61031b3660046119e1565b6107a5565b34801561032c57600080fd5b5061034061033b3660046118c7565b610819565b604051610144959493929190611b7d565b34801561035d57600080fd5b5061016d61036c366004611814565b61085c565b34801561037d57600080fd5b506101b161091c565b60408051606081810183526001600160a01b038816600081815260066020908152908590205484528301529181018690526103c48782878787610928565b6103e95760405162461bcd60e51b81526004016103e090611e4e565b60405180910390fd5b6001600160a01b03871660009081526006602052604090205461040d90600161225a565b6001600160a01b0388166000908152600660205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b9061045d90899033908a90611af9565b60405180910390a1600080306001600160a01b0316888a604051602001610485929190611a41565b60408051601f198184030181529082905261049f91611a25565b6000604051808303816000865af19150503d80600081146104dc576040519150601f19603f3d011682016040523d82523d6000602084013e6104e1565b606091505b5091509150816105035760405162461bcd60e51b81526004016103e090611feb565b98975050505050505050565b6105176109ce565b6001600160a01b0316610528610712565b6001600160a01b03161461054e5760405162461bcd60e51b81526004016103e090612032565b620f424081106105705760405162461bcd60e51b81526004016103e090611f9e565b60038190556040517ffa406a120a9e7f2b332bfb7a43d3bf1c3f079262202907a6b69c94b2821a02c6906105a5908390611b5d565b60405180910390a150565b6380ac58cd60e01b81565b6001600160a01b031660009081526006602052604090205490565b465b90565b7f8f9f4b63fb27ea36c52c6e650320201c8f2c6d7c1dfa95f40f5d5da52392016881565b6001546001600160a01b031681565b600054600160a01b900460ff1690565b61062661060e565b156106435760405162461bcd60e51b81526004016103e090611ee0565b61064d8282610a2a565b505050565b61065a61060e565b156106775760405162461bcd60e51b81526004016103e090611ee0565b61068384848484610bc8565b50505050565b6106916109ce565b6001600160a01b03166106a2610712565b6001600160a01b0316146106c85760405162461bcd60e51b81526004016103e090612032565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61072961060e565b156107465760405162461bcd60e51b81526004016103e090611ee0565b61075284848484611026565b5050505050565b60035481565b60045481565b61076d61060e565b1561078a5760405162461bcd60e51b81526004016103e090611ee0565b61068383838360405180602001604052806000815250611026565b6107ad6109ce565b6001600160a01b03166107be610712565b6001600160a01b0316146107e45760405162461bcd60e51b81526004016103e090612032565b60048190556040517fe7fa8737293f41b5dfa0d5c3e552860a06275bed7015581b083c7be7003308ba906105a5908390611b5d565b600260208181526000938452604080852090915291835291208054600182015492820154600383015460049093015491936001600160a01b039081169391169185565b6108646109ce565b6001600160a01b0316610875610712565b6001600160a01b03161461089b5760405162461bcd60e51b81526004016103e090612032565b6001600160a01b0381166108c15760405162461bcd60e51b81526004016103e090611cd5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60055481565b3b151590565b60006001600160a01b0386166109505760405162461bcd60e51b81526004016103e090612103565b600161096361095e876115e6565b611644565b838686604051600081526020016040526040516109839493929190611c13565b6020604051602081039080840390855afa1580156109a5573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b600033301415610a2557600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506105d89050565b503390565b610a32611765565b6000610a3c6109ce565b6001600160a01b038086166000908152600260208181526040808420898552825292839020835160a08101855281548082526001830154871693820193909352928101549094169282019290925260038301546060820152600490920154608083015291925090610abf5760405162461bcd60e51b81526004016103e090612067565b816001600160a01b031681602001516001600160a01b03161480610afb5750610ae6610712565b6001600160a01b0316826001600160a01b0316145b610b175760405162461bcd60e51b81526004016103e090611d71565b80516020808301516040808501516001600160a01b03808b16600090815260028087528482208c83529096528381208181556001810180546001600160a01b03199081169091559681018054909716909655600386018190556004909501949094559051919290919083169088907f0325426328de5b91ae4ad8462ad4076de4bcaf4551e81556185cacde5a425c6b90610bb49087908690611b66565b60405180910390a350919695505050505050565b610bd18461165b565b6000610bdb6109ce565b6040516331a9108f60e11b815290915085906000906001600160a01b03831690636352211e90610c0f908990600401611b5d565b60206040518083038186803b158015610c2757600080fd5b505afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190611830565b9050806001600160a01b0316836001600160a01b031614610c925760405162461bcd60e51b81526004016103e090611eab565b60405163020604bf60e21b815230906001600160a01b0384169063081812fc90610cc0908a90600401611b5d565b60206040518083038186803b158015610cd857600080fd5b505afa158015610cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d109190611830565b6001600160a01b03161480610d9e575060405163e985e9c560e01b81526001600160a01b0383169063e985e9c590610d4e9084903090600401611adf565b60206040518083038186803b158015610d6657600080fd5b505afa158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9e91906119c1565b610dba5760405162461bcd60e51b81526004016103e090611f0a565b60008511610dda5760405162461bcd60e51b81526004016103e0906121c1565b610de542603c61172e565b8411610e035760405162461bcd60e51b81526004016103e090611d1b565b60004282888a89604051602001610e1e959493929190611a93565b6040516020818303038152906040528051906020012090506040518060a00160405280828152602001836001600160a01b03168152602001896001600160a01b0316815260200187815260200186815250600260008a6001600160a01b03166001600160a01b0316815260200190815260200160002060008981526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015590505060006004541115610fd4576001546001600160a01b03166323b872dd85610f45610712565b6004546040518463ffffffff1660e01b8152600401610f6693929190611b2e565b602060405180830381600087803b158015610f8057600080fd5b505af1158015610f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb891906119c1565b610fd45760405162461bcd60e51b81526004016103e090611d9c565b816001600160a01b0316877f84c66c3f7ba4b390e20e8e8233e2a516f3ce34a72749e4f12bd010dfba238039838b8a8a6040516110149493929190611bcb565b60405180910390a35050505050505050565b61102e611765565b6110378561165b565b60006110416109ce565b6040516301ffc9a760e01b815290915086906001600160a01b038216906301ffc9a790611092907f8f9f4b63fb27ea36c52c6e650320201c8f2c6d7c1dfa95f40f5d5da52392016890600401611c31565b60206040518083038186803b1580156110aa57600080fd5b505afa1580156110be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e291906119c1565b1561118157604051638f9f4b6360e01b81526001600160a01b03821690638f9f4b63906111159089908890600401612239565b60206040518083038186803b15801561112d57600080fd5b505afa158015611141573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116591906119c1565b6111815760405162461bcd60e51b81526004016103e090611f5c565b6001600160a01b0380881660009081526002602081815260408084208b8552825292839020835160a0810185528154808252600183015487169382019390935292810154909416928201929092526003830154606082015260049092015460808301526112005760405162461bcd60e51b81526004016103e090612067565b60208101516001600160a01b03811661122b5760405162461bcd60e51b81526004016103e090611cac565b836001600160a01b0316816001600160a01b0316141561125d5760405162461bcd60e51b81526004016103e090611d71565b868260600151146112805760405162461bcd60e51b81526004016103e09061218a565b816080015142106112a35760405162461bcd60e51b81526004016103e0906120d8565b6040516331a9108f60e11b81526001600160a01b03841690636352211e906112cf908b90600401611b5d565b60206040518083038186803b1580156112e757600080fd5b505afa1580156112fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131f9190611830565b6001600160a01b0316816001600160a01b03161461134f5760405162461bcd60e51b81526004016103e0906121f8565b81516001600160a01b038a1660009081526002602081815260408084208d855290915282208281556001810180546001600160a01b0319908116909155918101805490921690915560038082018390556004909101829055549091901561147c576113d2620f42406113cc6003548c61174190919063ffffffff16565b9061174d565b6001549092506001600160a01b03166323b872dd876113ef610712565b856040518463ffffffff1660e01b815260040161140e93929190611b2e565b602060405180830381600087803b15801561142857600080fd5b505af115801561143c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146091906119c1565b61147c5760405162461bcd60e51b81526004016103e090611c59565b6001546001600160a01b03166323b872dd87856114998d87611759565b6040518463ffffffff1660e01b81526004016114b793929190611b2e565b602060405180830381600087803b1580156114d157600080fd5b505af11580156114e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150991906119c1565b6115255760405162461bcd60e51b81526004016103e09061213a565b604051632142170760e11b81526001600160a01b038616906342842e0e906115559086908a908f90600401611b2e565b600060405180830381600087803b15801561156f57600080fd5b505af1158015611583573d6000803e3d6000fd5b50505050856001600160a01b0316836001600160a01b03168b7f695ec315e8a642a74d450a4505eeea53df699b47a7378c7d752e97d5b16eb9bb848f8e6040516115cf93929190611bac565b60405180910390a450919998505050505050505050565b600060405180608001604052806043815260200161233960439139805160209182012083518483015160408087015180519086012090516116279501611bef565b604051602081830303815290604052805190602001209050919050565b600060055482604051602001611627929190611a78565b61166d816001600160a01b0316610922565b6116895760405162461bcd60e51b81526004016103e090612094565b6040516301ffc9a760e01b815281906001600160a01b038216906301ffc9a7906116be906380ac58cd60e01b90600401611c31565b60206040518083038186803b1580156116d657600080fd5b505afa1580156116ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170e91906119c1565b61172a5760405162461bcd60e51b81526004016103e090611df9565b5050565b600061173a828461225a565b9392505050565b600061173a8284612292565b600061173a8284612272565b600061173a82846122b1565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b600082601f8301126117a3578081fd5b813567ffffffffffffffff808211156117be576117be61230a565b604051601f8301601f1916810160200182811182821017156117e2576117e261230a565b6040528281528483016020018610156117f9578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215611825578081fd5b813561173a81612320565b600060208284031215611841578081fd5b815161173a81612320565b600080600080600060a08688031215611863578081fd5b853561186e81612320565b9450602086013567ffffffffffffffff811115611889578182fd5b61189588828901611793565b9450506040860135925060608601359150608086013560ff811681146118b9578182fd5b809150509295509295909350565b600080604083850312156118d9578182fd5b82356118e481612320565b946020939093013593505050565b600080600060608486031215611906578283fd5b833561191181612320565b95602085013595506040909401359392505050565b6000806000806080858703121561193b578384fd5b843561194681612320565b93506020850135925060408501359150606085013567ffffffffffffffff81111561196f578182fd5b61197b87828801611793565b91505092959194509250565b6000806000806080858703121561199c578384fd5b84356119a781612320565b966020860135965060408601359560600135945092505050565b6000602082840312156119d2578081fd5b8151801515811461173a578182fd5b6000602082840312156119f2578081fd5b5035919050565b60008151808452611a118160208601602086016122c8565b601f01601f19169290920160200192915050565b60008251611a378184602087016122c8565b9190910192915050565b60008351611a538184602088016122c8565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b61190160f01b81526002810192909252602282015260420190565b9485526bffffffffffffffffffffffff19606094851b811660208701526034860193909352921b166054830152606882015260880190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03848116825283166020820152606060408201819052600090611b25908301846119f9565b95945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b9283526001600160a01b03919091166020830152604082015260600190565b9384526001600160a01b039290921660208401526040830152606082015260800190565b93845260208401929092526001600160a01b03166040830152606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160e01b031991909116815260200190565b60006020825261173a60208301846119f9565b60208082526033908201527f5472616e73666572696e67207468652063757420746f20746865204d61726b656040820152721d1c1b1858d9481bdddb995c8819985a5b1959606a1b606082015260800190565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526036908201527f5075626c69636174696f6e2073686f756c64206265206d6f7265207468616e2060408201527531206d696e75746520696e207468652066757475726560501b606082015260800190565b6020808252601190820152702ab730baba3437b934bd32b2103ab9b2b960791b604082015260600190565b6020808252603f908201527f5472616e73666572696e6720746865207075626c69636174696f6e206665652060408201527f746f20746865204d61726b6574706c616365206f776e6572206661696c656400606082015260800190565b60208082526035908201527f546865204e465420636f6e74726163742068617320616e20696e76616c69642060408201527422a9219b99189034b6b83632b6b2b73a30ba34b7b760591b606082015260800190565b6020808252603d908201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a205349474e60408201527f45525f414e445f5349474e41545552455f444f5f4e4f545f4d41544348000000606082015260800190565b6020808252818101527f4f6e6c7920746865206f776e65722063616e20637265617465206f7264657273604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526032908201527f54686520636f6e7472616374206973206e6f7420617574686f72697a656420746040820152711bc81b585b9859d9481d1a1948185cdcd95d60721b606082015260800190565b60208082526022908201527f5468652061737365742066696e6765727072696e74206973206e6f742076616c6040820152611a5960f21b606082015260800190565b6020808252602d908201527f546865206f776e6572206375742073686f756c64206265206265747765656e2060408201526c3020616e64203939392c39393960981b606082015260800190565b60208082526027908201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a2043414c4c60408201526617d1905253115160ca1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260139082015272105cdcd95d081b9bdd081c1d589b1a5cda1959606a1b604082015260600190565b60208082526024908201527f546865204e465420416464726573732073686f756c64206265206120636f6e746040820152631c9858dd60e21b606082015260800190565b602080825260119082015270151a19481bdc99195c88195e1c1a5c9959607a1b604082015260600190565b6020808252601a908201527f4e4d54237665726966793a20494e56414c49445f5349474e4552000000000000604082015260600190565b60208082526030908201527f5472616e73666572696e67207468652073616c6520616d6f756e7420746f207460408201526f1a19481cd95b1b195c8819985a5b195960821b606082015260800190565b60208082526018908201527f546865207072696365206973206e6f7420636f72726563740000000000000000604082015260600190565b6020808252601d908201527f50726963652073686f756c6420626520626967676572207468616e2030000000604082015260600190565b60208082526021908201527f5468652073656c6c6572206973206e6f206c6f6e67657220746865206f776e656040820152603960f91b606082015260800190565b60008382526040602083015261225260408301846119f9565b949350505050565b6000821982111561226d5761226d6122f4565b500190565b60008261228d57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156122ac576122ac6122f4565b500290565b6000828210156122c3576122c36122f4565b500390565b60005b838110156122e35781810151838201526020016122cb565b838111156106835750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461233557600080fd5b5056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a2646970667358221220b569aca771dec8cc4c50e083df2c3c2e7df9e3df84c0cf3f5084814aa66758c764736f6c63430008000033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c8063715018a6116100a0578063ae7b033311610064578063ae7b0333146102e0578063af8996f114610300578063e61f385114610320578063f2fde38b14610351578063f698da25146103715761011f565b8063715018a61461026c5780638da5cb5b146102815780639b214f7714610296578063a01f79d4146102b6578063ae4f1198146102cb5761011f565b806337f82f37116100e757806337f82f37146101d3578063451c3d80146101e85780635c975abb1461020a5780636a2061371461022c5780636f652e1a1461024c5761011f565b80630c53c51c1461012457806319dad16d1461014d5780632b4c32be1461016f5780632d0335ab146101915780633408e470146101be575b600080fd5b61013761013236600461184c565b610386565b6040516101449190611c46565b60405180910390f35b34801561015957600080fd5b5061016d6101683660046119e1565b61050f565b005b34801561017b57600080fd5b506101846105b0565b6040516101449190611c31565b34801561019d57600080fd5b506101b16101ac366004611814565b6105bb565b6040516101449190611b5d565b3480156101ca57600080fd5b506101b16105d6565b3480156101df57600080fd5b506101846105db565b3480156101f457600080fd5b506101fd6105ff565b6040516101449190611acb565b34801561021657600080fd5b5061021f61060e565b6040516101449190611b52565b34801561023857600080fd5b5061016d6102473660046118c7565b61061e565b34801561025857600080fd5b5061016d610267366004611987565b610652565b34801561027857600080fd5b5061016d610689565b34801561028d57600080fd5b506101fd610712565b3480156102a257600080fd5b5061016d6102b1366004611926565b610721565b3480156102c257600080fd5b506101b1610759565b3480156102d757600080fd5b506101b161075f565b3480156102ec57600080fd5b5061016d6102fb3660046118f2565b610765565b34801561030c57600080fd5b5061016d61031b3660046119e1565b6107a5565b34801561032c57600080fd5b5061034061033b3660046118c7565b610819565b604051610144959493929190611b7d565b34801561035d57600080fd5b5061016d61036c366004611814565b61085c565b34801561037d57600080fd5b506101b161091c565b60408051606081810183526001600160a01b038816600081815260066020908152908590205484528301529181018690526103c48782878787610928565b6103e95760405162461bcd60e51b81526004016103e090611e4e565b60405180910390fd5b6001600160a01b03871660009081526006602052604090205461040d90600161225a565b6001600160a01b0388166000908152600660205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b9061045d90899033908a90611af9565b60405180910390a1600080306001600160a01b0316888a604051602001610485929190611a41565b60408051601f198184030181529082905261049f91611a25565b6000604051808303816000865af19150503d80600081146104dc576040519150601f19603f3d011682016040523d82523d6000602084013e6104e1565b606091505b5091509150816105035760405162461bcd60e51b81526004016103e090611feb565b98975050505050505050565b6105176109ce565b6001600160a01b0316610528610712565b6001600160a01b03161461054e5760405162461bcd60e51b81526004016103e090612032565b620f424081106105705760405162461bcd60e51b81526004016103e090611f9e565b60038190556040517ffa406a120a9e7f2b332bfb7a43d3bf1c3f079262202907a6b69c94b2821a02c6906105a5908390611b5d565b60405180910390a150565b6380ac58cd60e01b81565b6001600160a01b031660009081526006602052604090205490565b465b90565b7f8f9f4b63fb27ea36c52c6e650320201c8f2c6d7c1dfa95f40f5d5da52392016881565b6001546001600160a01b031681565b600054600160a01b900460ff1690565b61062661060e565b156106435760405162461bcd60e51b81526004016103e090611ee0565b61064d8282610a2a565b505050565b61065a61060e565b156106775760405162461bcd60e51b81526004016103e090611ee0565b61068384848484610bc8565b50505050565b6106916109ce565b6001600160a01b03166106a2610712565b6001600160a01b0316146106c85760405162461bcd60e51b81526004016103e090612032565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61072961060e565b156107465760405162461bcd60e51b81526004016103e090611ee0565b61075284848484611026565b5050505050565b60035481565b60045481565b61076d61060e565b1561078a5760405162461bcd60e51b81526004016103e090611ee0565b61068383838360405180602001604052806000815250611026565b6107ad6109ce565b6001600160a01b03166107be610712565b6001600160a01b0316146107e45760405162461bcd60e51b81526004016103e090612032565b60048190556040517fe7fa8737293f41b5dfa0d5c3e552860a06275bed7015581b083c7be7003308ba906105a5908390611b5d565b600260208181526000938452604080852090915291835291208054600182015492820154600383015460049093015491936001600160a01b039081169391169185565b6108646109ce565b6001600160a01b0316610875610712565b6001600160a01b03161461089b5760405162461bcd60e51b81526004016103e090612032565b6001600160a01b0381166108c15760405162461bcd60e51b81526004016103e090611cd5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60055481565b3b151590565b60006001600160a01b0386166109505760405162461bcd60e51b81526004016103e090612103565b600161096361095e876115e6565b611644565b838686604051600081526020016040526040516109839493929190611c13565b6020604051602081039080840390855afa1580156109a5573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b600033301415610a2557600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506105d89050565b503390565b610a32611765565b6000610a3c6109ce565b6001600160a01b038086166000908152600260208181526040808420898552825292839020835160a08101855281548082526001830154871693820193909352928101549094169282019290925260038301546060820152600490920154608083015291925090610abf5760405162461bcd60e51b81526004016103e090612067565b816001600160a01b031681602001516001600160a01b03161480610afb5750610ae6610712565b6001600160a01b0316826001600160a01b0316145b610b175760405162461bcd60e51b81526004016103e090611d71565b80516020808301516040808501516001600160a01b03808b16600090815260028087528482208c83529096528381208181556001810180546001600160a01b03199081169091559681018054909716909655600386018190556004909501949094559051919290919083169088907f0325426328de5b91ae4ad8462ad4076de4bcaf4551e81556185cacde5a425c6b90610bb49087908690611b66565b60405180910390a350919695505050505050565b610bd18461165b565b6000610bdb6109ce565b6040516331a9108f60e11b815290915085906000906001600160a01b03831690636352211e90610c0f908990600401611b5d565b60206040518083038186803b158015610c2757600080fd5b505afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190611830565b9050806001600160a01b0316836001600160a01b031614610c925760405162461bcd60e51b81526004016103e090611eab565b60405163020604bf60e21b815230906001600160a01b0384169063081812fc90610cc0908a90600401611b5d565b60206040518083038186803b158015610cd857600080fd5b505afa158015610cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d109190611830565b6001600160a01b03161480610d9e575060405163e985e9c560e01b81526001600160a01b0383169063e985e9c590610d4e9084903090600401611adf565b60206040518083038186803b158015610d6657600080fd5b505afa158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9e91906119c1565b610dba5760405162461bcd60e51b81526004016103e090611f0a565b60008511610dda5760405162461bcd60e51b81526004016103e0906121c1565b610de542603c61172e565b8411610e035760405162461bcd60e51b81526004016103e090611d1b565b60004282888a89604051602001610e1e959493929190611a93565b6040516020818303038152906040528051906020012090506040518060a00160405280828152602001836001600160a01b03168152602001896001600160a01b0316815260200187815260200186815250600260008a6001600160a01b03166001600160a01b0316815260200190815260200160002060008981526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015590505060006004541115610fd4576001546001600160a01b03166323b872dd85610f45610712565b6004546040518463ffffffff1660e01b8152600401610f6693929190611b2e565b602060405180830381600087803b158015610f8057600080fd5b505af1158015610f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb891906119c1565b610fd45760405162461bcd60e51b81526004016103e090611d9c565b816001600160a01b0316877f84c66c3f7ba4b390e20e8e8233e2a516f3ce34a72749e4f12bd010dfba238039838b8a8a6040516110149493929190611bcb565b60405180910390a35050505050505050565b61102e611765565b6110378561165b565b60006110416109ce565b6040516301ffc9a760e01b815290915086906001600160a01b038216906301ffc9a790611092907f8f9f4b63fb27ea36c52c6e650320201c8f2c6d7c1dfa95f40f5d5da52392016890600401611c31565b60206040518083038186803b1580156110aa57600080fd5b505afa1580156110be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e291906119c1565b1561118157604051638f9f4b6360e01b81526001600160a01b03821690638f9f4b63906111159089908890600401612239565b60206040518083038186803b15801561112d57600080fd5b505afa158015611141573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116591906119c1565b6111815760405162461bcd60e51b81526004016103e090611f5c565b6001600160a01b0380881660009081526002602081815260408084208b8552825292839020835160a0810185528154808252600183015487169382019390935292810154909416928201929092526003830154606082015260049092015460808301526112005760405162461bcd60e51b81526004016103e090612067565b60208101516001600160a01b03811661122b5760405162461bcd60e51b81526004016103e090611cac565b836001600160a01b0316816001600160a01b0316141561125d5760405162461bcd60e51b81526004016103e090611d71565b868260600151146112805760405162461bcd60e51b81526004016103e09061218a565b816080015142106112a35760405162461bcd60e51b81526004016103e0906120d8565b6040516331a9108f60e11b81526001600160a01b03841690636352211e906112cf908b90600401611b5d565b60206040518083038186803b1580156112e757600080fd5b505afa1580156112fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131f9190611830565b6001600160a01b0316816001600160a01b03161461134f5760405162461bcd60e51b81526004016103e0906121f8565b81516001600160a01b038a1660009081526002602081815260408084208d855290915282208281556001810180546001600160a01b0319908116909155918101805490921690915560038082018390556004909101829055549091901561147c576113d2620f42406113cc6003548c61174190919063ffffffff16565b9061174d565b6001549092506001600160a01b03166323b872dd876113ef610712565b856040518463ffffffff1660e01b815260040161140e93929190611b2e565b602060405180830381600087803b15801561142857600080fd5b505af115801561143c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146091906119c1565b61147c5760405162461bcd60e51b81526004016103e090611c59565b6001546001600160a01b03166323b872dd87856114998d87611759565b6040518463ffffffff1660e01b81526004016114b793929190611b2e565b602060405180830381600087803b1580156114d157600080fd5b505af11580156114e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150991906119c1565b6115255760405162461bcd60e51b81526004016103e09061213a565b604051632142170760e11b81526001600160a01b038616906342842e0e906115559086908a908f90600401611b2e565b600060405180830381600087803b15801561156f57600080fd5b505af1158015611583573d6000803e3d6000fd5b50505050856001600160a01b0316836001600160a01b03168b7f695ec315e8a642a74d450a4505eeea53df699b47a7378c7d752e97d5b16eb9bb848f8e6040516115cf93929190611bac565b60405180910390a450919998505050505050505050565b600060405180608001604052806043815260200161233960439139805160209182012083518483015160408087015180519086012090516116279501611bef565b604051602081830303815290604052805190602001209050919050565b600060055482604051602001611627929190611a78565b61166d816001600160a01b0316610922565b6116895760405162461bcd60e51b81526004016103e090612094565b6040516301ffc9a760e01b815281906001600160a01b038216906301ffc9a7906116be906380ac58cd60e01b90600401611c31565b60206040518083038186803b1580156116d657600080fd5b505afa1580156116ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170e91906119c1565b61172a5760405162461bcd60e51b81526004016103e090611df9565b5050565b600061173a828461225a565b9392505050565b600061173a8284612292565b600061173a8284612272565b600061173a82846122b1565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b600082601f8301126117a3578081fd5b813567ffffffffffffffff808211156117be576117be61230a565b604051601f8301601f1916810160200182811182821017156117e2576117e261230a565b6040528281528483016020018610156117f9578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215611825578081fd5b813561173a81612320565b600060208284031215611841578081fd5b815161173a81612320565b600080600080600060a08688031215611863578081fd5b853561186e81612320565b9450602086013567ffffffffffffffff811115611889578182fd5b61189588828901611793565b9450506040860135925060608601359150608086013560ff811681146118b9578182fd5b809150509295509295909350565b600080604083850312156118d9578182fd5b82356118e481612320565b946020939093013593505050565b600080600060608486031215611906578283fd5b833561191181612320565b95602085013595506040909401359392505050565b6000806000806080858703121561193b578384fd5b843561194681612320565b93506020850135925060408501359150606085013567ffffffffffffffff81111561196f578182fd5b61197b87828801611793565b91505092959194509250565b6000806000806080858703121561199c578384fd5b84356119a781612320565b966020860135965060408601359560600135945092505050565b6000602082840312156119d2578081fd5b8151801515811461173a578182fd5b6000602082840312156119f2578081fd5b5035919050565b60008151808452611a118160208601602086016122c8565b601f01601f19169290920160200192915050565b60008251611a378184602087016122c8565b9190910192915050565b60008351611a538184602088016122c8565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b61190160f01b81526002810192909252602282015260420190565b9485526bffffffffffffffffffffffff19606094851b811660208701526034860193909352921b166054830152606882015260880190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03848116825283166020820152606060408201819052600090611b25908301846119f9565b95945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b9283526001600160a01b03919091166020830152604082015260600190565b9384526001600160a01b039290921660208401526040830152606082015260800190565b93845260208401929092526001600160a01b03166040830152606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160e01b031991909116815260200190565b60006020825261173a60208301846119f9565b60208082526033908201527f5472616e73666572696e67207468652063757420746f20746865204d61726b656040820152721d1c1b1858d9481bdddb995c8819985a5b1959606a1b606082015260800190565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526036908201527f5075626c69636174696f6e2073686f756c64206265206d6f7265207468616e2060408201527531206d696e75746520696e207468652066757475726560501b606082015260800190565b6020808252601190820152702ab730baba3437b934bd32b2103ab9b2b960791b604082015260600190565b6020808252603f908201527f5472616e73666572696e6720746865207075626c69636174696f6e206665652060408201527f746f20746865204d61726b6574706c616365206f776e6572206661696c656400606082015260800190565b60208082526035908201527f546865204e465420636f6e74726163742068617320616e20696e76616c69642060408201527422a9219b99189034b6b83632b6b2b73a30ba34b7b760591b606082015260800190565b6020808252603d908201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a205349474e60408201527f45525f414e445f5349474e41545552455f444f5f4e4f545f4d41544348000000606082015260800190565b6020808252818101527f4f6e6c7920746865206f776e65722063616e20637265617465206f7264657273604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526032908201527f54686520636f6e7472616374206973206e6f7420617574686f72697a656420746040820152711bc81b585b9859d9481d1a1948185cdcd95d60721b606082015260800190565b60208082526022908201527f5468652061737365742066696e6765727072696e74206973206e6f742076616c6040820152611a5960f21b606082015260800190565b6020808252602d908201527f546865206f776e6572206375742073686f756c64206265206265747765656e2060408201526c3020616e64203939392c39393960981b606082015260800190565b60208082526027908201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a2043414c4c60408201526617d1905253115160ca1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260139082015272105cdcd95d081b9bdd081c1d589b1a5cda1959606a1b604082015260600190565b60208082526024908201527f546865204e465420416464726573732073686f756c64206265206120636f6e746040820152631c9858dd60e21b606082015260800190565b602080825260119082015270151a19481bdc99195c88195e1c1a5c9959607a1b604082015260600190565b6020808252601a908201527f4e4d54237665726966793a20494e56414c49445f5349474e4552000000000000604082015260600190565b60208082526030908201527f5472616e73666572696e67207468652073616c6520616d6f756e7420746f207460408201526f1a19481cd95b1b195c8819985a5b195960821b606082015260800190565b60208082526018908201527f546865207072696365206973206e6f7420636f72726563740000000000000000604082015260600190565b6020808252601d908201527f50726963652073686f756c6420626520626967676572207468616e2030000000604082015260600190565b60208082526021908201527f5468652073656c6c6572206973206e6f206c6f6e67657220746865206f776e656040820152603960f91b606082015260800190565b60008382526040602083015261225260408301846119f9565b949350505050565b6000821982111561226d5761226d6122f4565b500190565b60008261228d57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156122ac576122ac6122f4565b500290565b6000828210156122c3576122c36122f4565b500390565b60005b838110156122e35781810151838201526020016122cb565b838111156106835750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461233557600080fd5b5056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a2646970667358221220b569aca771dec8cc4c50e083df2c3c2e7df9e3df84c0cf3f5084814aa66758c764736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "cancelOrder(address,uint256)": {
        "details": "Cancel an already published order  can only be canceled by seller or the contract owner",
        "params": {
          "assetId": "- ID of the published NFT",
          "nftAddress": "- Address of the NFT registry"
        }
      },
      "constructor": {
        "details": "Initialize this contract. Acts as a constructor",
        "params": {
          "_acceptedToken": "- Address of the ERC20 accepted for this marketplace",
          "_ownerCutPerMillion": "- owner cut per million"
        }
      },
      "createOrder(address,uint256,uint256,uint256)": {
        "details": "Creates a new order",
        "params": {
          "assetId": "- ID of the published NFT",
          "expiresAt": "- Duration of the order (in hours)",
          "nftAddress": "- Non fungible registry address",
          "priceInWei": "- Price in Wei for the supported coin"
        }
      },
      "executeOrder(address,uint256,uint256)": {
        "details": "Executes the sale for a published NFT",
        "params": {
          "assetId": "- ID of the published NFT",
          "nftAddress": "- Address of the NFT registry",
          "price": "- Order price"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeExecuteOrder(address,uint256,uint256,bytes)": {
        "details": "Executes the sale for a published NFT and checks for the asset fingerprint",
        "params": {
          "assetId": "- ID of the published NFT",
          "fingerprint": "- Verification info for the asset",
          "nftAddress": "- Address of the NFT registry",
          "price": "- Order price"
        }
      },
      "setOwnerCutPerMillion(uint256)": {
        "details": "Sets the share cut for the owner of the contract that's  charged to the seller on a successful sale",
        "params": {
          "_ownerCutPerMillion": "- Share amount, from 0 to 999,999"
        }
      },
      "setPublicationFee(uint256)": {
        "details": "Sets the publication fee that's charged to users to publish items",
        "params": {
          "_publicationFee": "- Fee amount in wei this contract charges to publish an item"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5426,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5546,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 4932,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "acceptedToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(ERC20Interface)4869"
      },
      {
        "astId": 4950,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orderByAssetId",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)4943_storage))"
      },
      {
        "astId": 4952,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "ownerCutPerMillion",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 4954,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "publicationFeeInWei",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 5159,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "domainSeparator",
        "offset": 0,
        "slot": "5",
        "type": "t_bytes32"
      },
      {
        "astId": 5254,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "nonces",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ERC20Interface)4869": {
        "encoding": "inplace",
        "label": "contract ERC20Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)4943_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Order))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Order)4943_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Order)4943_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct MarketplaceStorage.Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)4943_storage"
      },
      "t_struct(Order)4943_storage": {
        "encoding": "inplace",
        "label": "struct MarketplaceStorage.Order",
        "members": [
          {
            "astId": 4934,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 4936,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 4938,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "nftAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 4940,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4942,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "expiresAt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}